Desafio

Astrônomos e astrofísicos utilizam diferentes unidades de tempo para medir o tempo em outros planetas.
Neste desafio de código, você deverá criar um programa que solicite a idade de uma pessoa em anos terrestres e calcule a idade equivalente em outros 
planetas. Para isso, considere as seguintes informações:

    Marte: 1 ano marciano dura aproximadamente 1,88 anos terrestres;
    Venus: 1 ano venusiano dura aproximadamente 0,62 anos terrestres;
    Jupiter: 1 ano jupiteriano dura aproximadamente 11,86 anos terrestres.

Entrada

    Solicitação da idade em anos terrestres através da entrada de dados do usuário;
    Solicitação do planeta desejado (Marte, Venus ou Jupiter) através da entrada de dados do usuário.

O usuário deve fornecer sua idade em anos terrestres e o planeta para o qual deseja converter a idade.
Saída

    Exibição da idade equivalente em anos planetários de acordo com o planeta escolhido pelo usuário.

A saída deve ser apresentada em uma mensagem na tela, informando a idade equivalente em anos planetários para o planeta escolhido, 
com duas casas decimais após a vírgula.
Se o planeta informado pelo usuário não for um dos três planetas mencionados acima, a mensagem "Planeta invalido." deve ser exibida.

import java.util.Scanner;

public class IdadePlanetaria {

  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    double idadeTerrestre = scanner.nextDouble();
    String planeta = scanner.next();

    double idadePlanetaria;
    if (planeta.equals("Marte")) {
      idadePlanetaria = idadeTerrestre / 1.88;
      System.out.printf("Idade equivalente em Marte: %.2f anos", idadePlanetaria);
    } else if (planeta.equals("Venus")) {
      idadePlanetaria = idadeTerrestre / 0.62;
      System.out.printf("Idade equivalente em Vênus: %.2f anos", idadePlanetaria);
    } else if (planeta.equals("Jupiter")) {
      idadePlanetaria = idadeTerrestre / 11.86;
      System.out.printf("Idade equivalente em Júpiter: %.2f anos", idadePlanetaria);
    } else {
      System.out.println("Planeta invalido.");
    }
    
    scanner.close();
  }
}
==============================================================================
limitando erros de entrada pela idade 
==============================================================================
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class IdadePlanetaria {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        double idadeTerrestre;
        String planeta;

        try {
            idadeTerrestre = Double.parseDouble(br.readLine());
            planeta = br.readLine().trim().toLowerCase();
        } catch (NumberFormatException e) {
            System.out.println("Entrada invalida.");
            return;
        }

        double idadePlanetaria;
        switch (planeta) {
            case "marte":
                idadePlanetaria = idadeTerrestre / 1.88;
                System.out.printf("Idade equivalente em Marte: %.2f anos\n", idadePlanetaria);
                break;
            case "venus":
                idadePlanetaria = idadeTerrestre / 0.62;
                System.out.printf("Idade equivalente em Venus: %.2f anos\n", idadePlanetaria);
                break;
            case "jupiter":
                idadePlanetaria = idadeTerrestre / 11.86;
                System.out.printf("Idade equivalente em Jupiter: %.2f anos\n", idadePlanetaria);
                break;
            default:
                System.out.println("Planeta invalido.");
                break;
        }
    }
}
